
const mssql = require('mssql')

const sqlConfig = {
    user: "tc24",
    password: "1234",
    database: "travelClinic",
    server: 'localhost', //Server to connect to. You can use 'localhost\instance' to connect to named instance.
    port: 1433, //Port to connect to (default: 1433). Don't set when connecting to named instance.
    pool: {
        max: 10,
        min: 0,
        idleTimeoutMillis: 30000
    },
    options: {
        encrypt: false, // for azure use true
        trustServerCertificate: true // use true for local dev / self-signed certs
    }
}
const appPool = new mssql.ConnectionPool(sqlConfig)



// //===============================================================

const getClinics = async (req, theId) => {
    return new Promise(async (resolve, reject) => {
        try {
            let myConnectionPoolToDB = await appPool.connect()
            try {
                let results = await myConnectionPoolToDB.query(`select * from clinics`)//where id = ? OR id = ?`, (theId, theId + 2))
                resolve(results);
            }
            catch (err) {
                console.log("there was an error while sending query to DB ", err);
                reject(err);
            }
        }
        catch (err) {
            console.error('ERROR CONNECTION TO DB: ', err);
            reject('ERROR CONNECTION TO DB: ', err);
        }
    })
}

module.exports.getClinics = getClinics;


// //===============================================================

const getVaccineCatalog = async (req, theId) => {
    return new Promise(async (resolve, reject) => {
        try {
            let myConnectionPoolToDB = await appPool.connect()
            try {
                let results = await myConnectionPoolToDB.query(`select * from VaccinCatalog`)//where id = ? OR id = ?`, (theId, theId + 2))
                resolve(results);
            }
            catch (err) {
                console.log("there was an error while sending query to DB ", err);
                reject(err);
            }
        }
        catch (err) {
            console.error('ERROR CONNECTION TO DB: ', err);
            reject('ERROR CONNECTION TO DB: ', err);
        }
    })
}

module.exports.getVaccineCatalog = getVaccineCatalog;

// //===============================================================

const setAppointment = async (req, HDN, clinic, datetime) => {
    return new Promise(async (resolve, reject) => {
        try {
            // Connect to the database
            let myConnectionPoolToDB = await appPool.connect();
            try { 
                console.log(HDN)
                console.log(clinic)
                console.log(datetime)
                // console.log(time)

                let theResults = await myConnectionPoolToDB.request()
                .input("HDN", mssql.Int(), HDN) 
                .input("nameOfClinic", mssql.NVarChar(), clinic) 
                .input("datetimeOfAppointment", mssql.DateTime(), datetime)   
                .execute('spInsertAppointment');
                
                // Handle the result if needed
                resolve(theResults);
                console.log('Insert successful:', theResults.recordset);
            }
            catch (err) {
                console.error('ERROR EXECUTING SQL QUERY: ', err);
                reject('ERROR EXECUTING SQL QUERY: ', err);
            }
        }
        catch (err) {
            console.error('ERROR CONNECTION TO DB: ', err);
            reject('ERROR CONNECTION TO DB: ', err);
        }
    })
}
module.exports.setAppointment = setAppointment;

// //===============================================================

const HDNformSubmission = async (req, userID, AcuteDisease, ChronicIllness,ImmuneSysDefect,PerMed,MedSensitivity,VaccAllergy,BloodTransfusion,Hepatitis,Pox,Pregnancy) => {
    return new Promise(async (resolve, reject) => {
        try {
            // Connect to the database
            let myConnectionPoolToDB = await appPool.connect();
            try { 
                console.log(HDN)
                console.log(clinic)
                console.log(datetime)
                // console.log(time)

                let theResults = await myConnectionPoolToDB.request()
                .input("HDN", mssql.Int(), HDN) 
                .input("nameOfClinic", mssql.NVarChar(), clinic) 
                .input("datetimeOfAppointment", mssql.DateTime(), datetime)   
                .execute('spInsertAppointment');
                
                // Handle the result if needed
                resolve(theResults);
                console.log('Insert successful:', theResults.recordset);
            }
            catch (err) {
                console.error('ERROR EXECUTING SQL QUERY: ', err);
                reject('ERROR EXECUTING SQL QUERY: ', err);
            }
        }
        catch (err) {
            console.error('ERROR CONNECTION TO DB: ', err);
            reject('ERROR CONNECTION TO DB: ', err);
        }
    })
}
module.exports.HDNformSubmission = HDNformSubmission;